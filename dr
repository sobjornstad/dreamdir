#!/bin/bash
. ~/bin/common.sh

usagemsg() {
    cat <<USAGEMSG
Dreamdir helper script
Copyright (c) 2015-2016 Soren Bjornstad.
Usage: $0 <action> [<action arguments>]

Available actions:
help                         :: show this usage message
new                          :: create a new dream with the next available ID
                                number
header-list <header>         :: show a list of all values used for this header
                                in any dream
find-tagged <header> <value> :: print list of ID numbers matching search
open-tagged <header> <value> :: pass dreams matching search as args to $EDITOR'
random                       :: open a random dream in 'view'
id-check                     :: check to make sure all dream ID numbers are
                                contiguous
USAGEMSG
    exit 0
}

ensure '-d scripts'  "Please run this script from the dreamdir root directory."
ensure '-d graphs'   "Please run this script from the dreamdir root directory."

[ -z "$1" ] && usagemsg

case "$1" in
"new")
    lastNum=$(ls *.dre | sort | tail -n 1 | cut -c 1-5)
    let newNum=10#$lastNum+1
    printf -v newNum '%05d' "$newNum"
    echo -e "Id:\t$newNum" > $newNum.dre
    today=$(date '+%Y-%m-%d')
    echo -e "Date:\t$today" >> $newNum.dre
    echo -e "Time:\t" >> $newNum.dre
    echo -e "Tags:\t" >> $newNum.dre
    echo -e "\n" >> $newNum.dre
    cp $newNum.dre /tmp
    if [ "$EDITOR" == "vim" ]; then
        vim $newNum.dre +
    else
        "$EDITOR" $newNum.dre
    fi
    diff /tmp/$newNum.dre $newNum.dre > /dev/null 2>&1
    if [ $? == 0 ]; then
        echo "Deleting unmodified dreamfile."
        rm $newNum.dre
        rm /tmp/$newNum.dre
    fi
    ;;

"header-list")
    ensure "! -z \"$2\"" "Please specify a header type, like './dr header-list Tags'."
    grep "$2:	" *.dre | cut -d ':' -f 3 | cut -c 2- | sed -e 's/, /\n/g' | sort | uniq
    ;;

"random")
    view $(ls -1 *.dre | shuf | head -n 1) ;;

"id-check")
    python2 <<PYTH_ID_CHECK
import subprocess, sys
listing = subprocess.check_output(["ls"]).split('.dre\n')
nums = []
for i in listing:
    try:
        nums.append(int(i))
    except ValueError:
        # not a dream file, but auxiliary of some kind
        continue

lastnum = 0
for i in nums:
    if i != lastnum+1:
        print("Dream ID continuity check failed!")
        print("Failure was on ID %i, not continuous with previous ID %i." % (
              i, lastnum))
        sys.exit(1)
    else:
        lastnum = i
print("Dream ID continuity check succeeded.")
sys.exit(0)
PYTH_ID_CHECK
    ;;

"find-tagged")
    header="$2"
    shift; shift
    python2 <<PYTH_FINDTAGGED
import scripts.ddirparse as dp
dreams = dp.getDreamsTagged("$header", "$@")
print "%i matches: %r" % (len(dreams), dreams)
PYTH_FINDTAGGED
    ;;

"open-tagged")
    # Do a find using the same method as find-tagged but then open those files
    # in vim rather than just showing a list of the numbers.
    tempfile="/tmp/dreamsearch"
    ensure '! -e $tempfile' "Please check & remove existing temp file $tempfile and try again."
    header="$2"
    shift; shift # value to search for remains in args

    python2 <<PYTH_SHOWTAGGED
import scripts.ddirparse as dp
dreams = dp.getDreamsTagged("$header", "$@")
dreamStr = '.dre '.join([("%05i" % i) for i in dreams]) + '.dre'
with open("$tempfile", "w") as f:
    f.write(dreamStr)
PYTH_SHOWTAGGED
    args=$(cat "$tempfile")

    if [ "$args" == ".dre" ]; then
        echo "Sorry, no results for that query."
        rm "$tempfile"
        exit 1
    else
        "$EDITOR" $args
        rm "$tempfile"
    fi
    ;;

"help"|"--help"|*)
    usagemsg ;;
esac
exit 0
